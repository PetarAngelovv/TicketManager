@using TicketManager.Web.ViewModels.Event
@model PaginatedEventsViewModel

@{
    ViewData["Title"] = "Welcome";
    Layout = "_Layout";
}

<form id="antiForgeryForm">
    @Html.AntiForgeryToken()
</form>

<div class="container mt-5">

    <h2 class="mb-4 text-center">🎟️ All Events</h2>

    <!-- Filter by Category -->
    <select id="categoryFilter" class="form-select mb-3">
        <option value="">All Categories</option>
        @foreach (var category in ViewBag.Categories as List<AddCategoryDropDownModel>)
        {
            <option value="@category.Id">@category.Name</option>
        }
    </select>

    <!-- Search -->
    <div class="mb-4">
        <input type="text" id="eventSearchInput" class="form-control" placeholder="🔍 Search events..." />
    </div>

    <!-- Results -->
    <div id="eventResults">
        @await Html.PartialAsync("EventListPartial", Model)
    </div>

    <!-- Favorites Button -->
    <div class="text-center mt-4">
        <a asp-controller="Event" asp-action="Favorites" class="btn btn-outline-danger w-100 mt-4">
            <i class="fas fa-heart"></i>❤️ Go to Favorites
        </a>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="eventDetailsModal" tabindex="-1" aria-labelledby="eventDetailsLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventDetailsLabel">Event Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="eventDetailsContent">
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        // Save Favorite
        $(document).on("click", ".btn-save", function () {
            const button = $(this);
            const eventId = button.data("event-id");

            $.ajax({
                url: "/Event/Save",
                method: "POST",
                data: { id: eventId },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    if (response.success) {
                        const card = button.closest(".card");
                        const countSpan = card.find(".favorites-count");

                        let count = parseInt(countSpan.text());
                        count++;
                        countSpan.text(count);

                        button.replaceWith(`
                            <a href="/Event/Favorites" class="btn btn-outline-danger w-100">
                                <i class="fas fa-heart"></i> Go to Favorites
                            </a>
                        `);
                    } else {
                        alert(response.message || "Error saving event.");
                    }
                },
                error: function () {
                    alert("AJAX error.");
                }
            });
        });

        // Show Details
        $(document).on("click", ".btn-details", function () {
            const eventId = $(this).data("event-id");

            $.get("/Event/GetDetailsPartial", { id: eventId })
                .done(function (data) {
                    $("#eventDetailsContent").html(data);
                    new bootstrap.Modal(document.getElementById('eventDetailsModal')).show();
                })
                .fail(function () {
                    $("#eventDetailsContent").html("<p class='text-danger'>Error loading details.</p>");
                    new bootstrap.Modal(document.getElementById('eventDetailsModal')).show();
                });
        });

        // Load events with search, filter and page
        function loadEvents(page = 1) {
            let term = $('#eventSearchInput').val();
            let categoryId = $('#categoryFilter').val();

            $.ajax({
                url: '/Event/Search',
                type: 'GET',
                data: { term: term, categoryId: categoryId, page: page },
                success: function (result) {
                    $('#eventResults').html(result);
                },
                error: function () {
                    $('#eventResults').html('<p class="text-danger">Error loading events.</p>');
                }
            });
        }

        // Event handlers for search and filter
        $('#eventSearchInput').on('keyup', function () {
            loadEvents(1);
        });
        $('#categoryFilter').on('change', function () {
            loadEvents(1);
        });

        // Pagination (AJAX)
        $(document).on('click', '.page-link-ajax', function (e) {
            e.preventDefault();
            let page = $(this).data('page');
            loadEvents(page);
        });

        // Buy Ticket
        $(document).on('click', '.buy-ticket-btn', function () {
            const eventId = $(this).data('event-id');

            fetch(`/Event/Buy?id=${eventId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('✅ Ticket purchased!');
                        updateTicketsLeft(eventId);
                    } else {
                        alert('❌ ' + data.message);
                    }
                });
        });

            function updateTicketsLeft(eventId) {
            fetch(`/Event/GetTicketsLeft?id=${eventId}`)
                .then(response => response.json())
                .then(data => {
                    console.log(`Tickets left data for event ${eventId}:`, data);
                    if (data.success) {
                        const ticketsLeftElement = document.getElementById(`tickets-left-${eventId}`);
                        if (ticketsLeftElement) {
                            ticketsLeftElement.textContent = `🎟️ Tickets Left: ${data.ticketsLeft}`;
                        } else {
                            console.warn(`Element with id tickets-left-${eventId} not found!`);
                        }
                    } else {
                        console.error('Failed to get tickets left:', data.message);
                    }
                })
                .catch(error => console.error('Error fetching tickets left:', error));
        }


        $(document).ready(function () {
            loadEvents(1);
        });
    </script>
}

